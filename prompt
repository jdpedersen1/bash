###------------------- PROMPT -----------------------###

function parse_git_dirty {
  STATUS="$(git status 2> /dev/null)"
  if [[ $? -ne 0 ]]; then printf ""; return; else printf " ["; fi
  if echo "${STATUS}" | grep -c "renamed:"         &> /dev/null; then printf " >"; else printf ""; fi
  if echo "${STATUS}" | grep -c "branch is ahead:" &> /dev/null; then printf " !"; else printf ""; fi
  if echo "${STATUS}" | grep -c "new file::"       &> /dev/null; then printf " +"; else printf ""; fi
  if echo "${STATUS}" | grep -c "Untracked files:" &> /dev/null; then printf " ?"; else printf ""; fi
  if echo "${STATUS}" | grep -c "modified:"        &> /dev/null; then printf " *"; else printf ""; fi
  if echo "${STATUS}" | grep -c "deleted:"         &> /dev/null; then printf " -"; else printf ""; fi
  printf " ]"
}

parse_git_branch() {
  git rev-parse --abbrev-ref HEAD 2> /dev/null
}

prompt_comment() {
    DIR="$HOME/.local/share/promptcomments/"
    MESSAGE="$(find "$DIR"/*.txt | shuf -n1)"
    cat "$MESSAGE"
}

PYTHON_ICON="[  ] "  # Snake emoji for Python
RUST_ICON="\U1F680"    # Rocket emoji for Rust
BASH_ICON="[  ] "        # No icon for directories with multiple file types
HASKELL_ICON="[  ] "
JAVA_ICON="[  ] "
DEFAULT_ICON=""


# Function to determine directory file types
function set_prompt_icon() {
    # Get the file extensions in the current directory
    extensions=$(find . -maxdepth 1 -type f | sed -n 's/.*\.//p' | sort | uniq)

    # Count the number of unique file extensions
    count=$(echo "$extensions" | wc -l)

    # Check if there is only one type of file in the directory
    if [ "$count" -eq 1 ]; then
        case "$extensions" in
            py)
                echo -e "$PYTHON_ICON"
                ;;
            rs)
                echo -e "$RUST_ICON"
                ;;
            sh)
                echo -e "$BASH_ICON"
                ;;
            hs)
                echo -e "$HASKELL_ICON"
                ;;
            java)
                echo -e "$JAVA_ICON"

        esac
    else
        echo -e "$DEFAULT_ICON"
    fi
}

PS1="\[\e[1;31m\]\$(parse_git_branch)\[\033[34m\]\$(parse_git_dirty)\n\[\033[1;30m\]  \[\e[1;37m\] \w \[\e[1;33m\]\$(set_prompt_icon)󰅂\[\e[0;37m\] "



